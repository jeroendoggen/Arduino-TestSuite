{"name":"Arduino TestSuite","body":"Arduino TestSuite\r\n=================\r\n\r\nPython Script to automate Arduino Unit Tests\r\n--------------------------------------------\r\n\r\n * The unit tests are written with the \"Arduino Unit Testing Library\": http://code.google.com/p/arduinounit\r\n * The tests also use \"Arduino Unit Testing Helper Library\": http://code.google.com/p/arduino-unit-test-helper-library\r\n * The code is uploaded to the Arduino board with \"Arscons: scons script for Arduino\": http://github.com/suapapa/arscons\r\n\r\nInstallation:\r\n-------------\r\n * Downloads source and run \"python setup.py install\"\r\n * Python Package available in the Python Package Index at: http://pypi.python.org/pypi/ArduinoTestSuite/ (\"pip install ArduinoTestSuite\")\r\n * Currently only tested on Linux (serial port is hardcoded, subprocess handling only works on Linux)\r\n\r\nUsage:\r\n------\r\n * Start the program with: \"python -m ArduinoTestSuite\" (or python main.py)\r\n * Selecting the tests you want to run, configuring Arduino path and configuring the serial port is currently done by editing \"main.py\" and \"testSuite.py\"\r\n\r\nProgram Flow:\r\n------------\r\nThese steps are performed for each set of unit tests (typically to test one Arduino library)\r\n   1. Compile a sketch that runs several unit tests\r\n   2. Upload and run the sketch using Arscons\r\n   3. Check unit test output\r\n\r\nSteps 1,2 and 3 are repeated for all the libraries that you are using in the project.\r\n\r\nThe script prints a summary showing an overview of the failed/passed test in the complete testsuite.\r\n\r\nTypical Output:\r\n---------------\r\nTwo Arduino libraries are tested, one passes, one fails.\r\n\r\n````\r\n=============================================================\r\nPlanned tests:\r\n-------------------------------------------------------------\r\n 1. DistanceSensor/examples/GP2Y0A21YK/TestSuite/\r\n 2. My_Module/examples/TestSuite/\r\n\r\nProgram flow:\r\n 1. Compile TestSuite sketch\r\n 2. Upload sketch using Arscons\r\n 3. Check unit test output\r\n\r\n=============================================================\r\nStarting test: DistanceSensor/examples/GP2Y0A21YK/TestSuite/\r\n-------------------------------------------------------------\r\nCompiling & uploading sketch to Arduino...\r\nUpload succesfull\r\nRunning test suite...\r\nTests run: 3 Successful: 3 Failed: 0\r\n\r\n=============================================================\r\nStarting test: My_Module/examples/TestSuite/\r\n-------------------------------------------------------------\r\nCompiling & uploading sketch to Arduino...\r\nUpload succesfull\r\nRunning test suite...\r\nAssertion failed in 'temperatureRange' on line 68\r\nTests run: 3 Successful: 2 Failed: 1\r\n\r\n=============================================================\r\nSummary: \r\nFailed tests:\r\n 1. My_Module/examples/TestSuite/\r\n\r\nPassed tests:\r\n 1. DistanceSensor/examples/GP2Y0A21YK/TestSuite/\r\n=============================================================\r\n````\r\n","tagline":"Python Script to automate Arduino Unit Tests","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-37264563-3"}